generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model meme {
  id            Int        @id @default(autoincrement())
  cloudinaryUrl String     @unique
  originalImage String
  createdAt     DateTime   @default(now())
  user          user       @relation(fields: [userWallet], references: [userWallet])
  userWallet    String
  minted        Boolean    @default(false)
  txnhash       String?    @default("")
  nftDetail     NftDetail? @relation(fields: [nftAddress], references: [nftAddress])
  nftAddress    String?
}

model user {
  id         Int      @id @default(autoincrement())
  memes      meme[]
  userWallet String   @unique
  username   String   @unique
  createdAt  DateTime @default(now())
}

model NftDetail {
  nftAddress           String  @id @unique
  mintAddress          String
  name                 String
  uri                  String
  transactionSignature String  @unique
  tokenAddress         String?
  ownerAddress         String?
  meme                 meme[]
}

model nfts {
  id        Int       @id @default(autoincrement())
  sourceUrl String    @unique
  verified  Boolean   @default(false)
  platform  Platforms
}

enum Platforms {
  bazar
  thebuffers
  opensea
  unleash
}

model buffernft {
  id             Int      @id @default(autoincrement()) // Auto-incremented ID
  imageUrl       String // URL for the image
  bootloaderName Json // Store bootloader name as a JSON field
  dateCreated    BigInt // Timestamp as a BigInt for precision
  topics         String[] // Array of topics
  createdAt      DateTime @default(now()) // Timestamp of creation
  updatedAt      DateTime @updatedAt // Timestamp for when the record was last updated
}
